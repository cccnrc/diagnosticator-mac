#!/usr/bin/env bash

#########################
# Author: Enrico Cocchi #
### Date: 17 feb 2022 ###
#########################

### define variables
script_name=$(basename "$0")
version="0.1.9"

### point to machine-specific installer
LINUX_EXE=/usr/bin/diagnosticator-linux.sh
MAC_EXE=/usr/local/bin/diagnosticator-mac.sh

usage() {
    cat <<EOF
Script name: $script_name
Description:
============
This script automates Diagnosticator installation and run
======================================
See https://diagnosticator.com
Usage:
======
$script_name [ -h | --help | -v | --version]
Examples:
=========
    # install and run
    $script_name
    # Show help
    $script_name -h
    # Show version
    $script_name -v
EOF
}

while (($# > 0)); do # while arguments count>0
    case "$1" in
    -h | --help)
        usage
        exit
        ;;
    -v | --version)
        echo ${version}
        exit
        ;;
    *) # unknown flag/switch
        POSITIONAL+=("$1")
        shift
        ;;
    esac
done

echo
echo "# ========================== #"
echo "# == diagnosticator 0.1.5 == #"
echo "# ========================== #"
echo


### check running environment
echo -e "0. checking ${BRIGHT}machine${NORMAL} ..."
UNAME_OUT="$(uname -s)"
case "${UNAME_OUT}" in
    Linux*)     MACHINE=Linux;;
    Darwin*)    MACHINE=Mac;;
    CYGWIN*)    MACHINE=Cygwin;;
    MINGW*)     MACHINE=MinGw;;
    *)          MACHINE="UNKNOWN:${UNAME_OUT}"
esac

if [[ "${MACHINE}" == "Linux" ]]; then
  EXE=$LINUX_EXE
elif [[ "${MACHINE}" == "Mac" ]]; then
  EXE=$MAC_EXE
else
  echo "ATTENTION: we are still working on ${MACHINE} implementation ..."
  echo " -> come back soon ;)"
  echo
  exit 1
fi

echo
echo -e " -> running in: ${MACHINE}"
echo -e "    -> running: ${EXE}"
$EXE
